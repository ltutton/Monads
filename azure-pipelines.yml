
variables:
  Major: '1'
  Minor: '1'
  Patch: '0'
  BuildConfiguration: 'Release'
  PackageVersion: '$(Major).$(Minor).$(Patch)'

trigger:
- master
- dev

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: UseDotNet@2
  displayName: 'Install tools'
  inputs:
    packageType: 'sdk'
    version: 2.1.505

- task: DotNetCoreCLI@2
  displayName: 'Build'
  condition: succeeded()
  inputs:
    command: 'build'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  condition: succeeded()
  inputs:
    command: 'test'

- task: DotNetCoreCLI@2
  displayName: 'Pack Prerelease'
  condition: succeeded()
  inputs:
    command: 'pack'
    nobuild: true
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '$(Major)'
    minorVersion: '$(Minor)'
    patchVersion: '$(Patch)'
    packDirectory: '$(Build.ArtifactStagingDirectory)/PreRelease'

- task: DotNetCoreCLI@2
  displayName: 'Pack Release'
  condition: succeeded()
  inputs:
    command: 'pack'
    nobuild: true
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'PackageVersion'
    packDirectory: '$(Build.ArtifactStagingDirectory)/Release'


- task: PublishPipelineArtifact@0
  condition: succeeded()
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'